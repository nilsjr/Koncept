[versions]
kotlin = "1.6.21"
coroutines = "1.6.2"
compose = "1.2.0-beta03"
composeCompiler = "1.2.0-beta03"
room = "2.4.1"
moshi = "1.13.0"
hilt = "2.42"
lifecycle = "2.5.0-rc01"
accompanist = "0.24.10-beta"
retrofit = "2.9.0"
okHttp = "4.9.3"
junit4 = "4.13.2"
junit5 = "5.9.0-M1"
mockito = "4.6.1"
mockitoKotlin = "4.0.0"

[libraries]
# android
core = { module = "androidx.core:core-ktx", version = "1.9.0-alpha02" }
desugar = { module = "com.android.tools:desugar_jdk_libs", version = "1.1.5" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
startup = "androidx.startup:startup-runtime:1.1.0"
datastore = "androidx.datastore:datastore-preferences:1.0.0"
# lifecycle
lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
viewModelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
# room
room = { module = "androidx.room:room-ktx", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
#moshi
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshiKotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshiCompiler = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }
# hilt
hilt = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hiltCore = { module = "com.google.dagger:hilt-core", version.ref = "hilt" }
hiltCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hiltNavigation = { module = "androidx.hilt:hilt-navigation-compose", version = "1.0.0" }
# compose
composeActivity = "androidx.activity:activity-compose:1.6.0-alpha01"
composeUi = { module = "androidx.compose.ui:ui", version.ref = "compose" }
composeFoundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
composeUiTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
composeUiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
composeMaterial = { module = "androidx.compose.material:material", version.ref = "compose" }
composeMaterialIcons = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
composeMaterial3 = { module = "androidx.compose.material3:material3", version = "1.0.0-alpha08" }
composeNavigation = { module = "androidx.navigation:navigation-compose", version = "2.5.0-alpha03" }
constraintCompose = { module = "androidx.constraintlayout:constraintlayout-compose", version = "1.0.0" }
pagingCompose = "androidx.paging:paging-compose:1.0.0-alpha14"
coilCompose = "io.coil-kt:coil-compose:2.1.0"
# accompanist
accompanistSystemUi = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
accompanistInsets = { module = "com.google.accompanist:accompanist-insets", version.ref = "accompanist" }
accompanistNavAnim = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
accompanistNavMaterial = { module = "com.google.accompanist:accompanist-navigation-material", version.ref = "accompanist" }
# retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitMoshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
# okhttp
okHttpBom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okHttp" }
okHttp = { module = "com.squareup.okhttp3:okhttp" }
okHttpInterceptor = { module = "com.squareup.okhttp3:logging-interceptor" }
okHttpMock = { module = "com.squareup.okhttp3:mockwebserver" }
# utils
timber = "com.jakewharton.timber:timber:5.0.1"
lottie = "com.airbnb.android:lottie-compose:5.2.0"
javax = "javax.inject:javax.inject:1"
# arrow
arrowStack = { module = "io.arrow-kt:arrow-stack", version = "1.1.2" }
arrowKt = { module = "io.arrow-kt:arrow-core" }
arrowKtRetrofit = { module = "io.arrow-kt:arrow-core-retrofit" }

# testing
junit4 = { module = "junit:junit", version.ref = "junit4" }
junit5Bom = { module = "org.junit:junit-bom", version.ref = "junit5" }
junit5Api = { module = "org.junit.jupiter:junit-jupiter-api" }
junit5Params = { module = "org.junit.jupiter:junit-jupiter-params" }
junit5Engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
junit5VintageEngine = { module = "org.junit.vintage:junit-vintage-engine" }
coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
# mock
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockitoJupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
mockitoKotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
mockk = "io.mockk:mockk:1.12.2"
turbine = "app.cash.turbine:turbine:0.8.0"
faker = "io.github.serpro69:kotlin-faker:1.9.0"
# android
robolectric = "org.robolectric:robolectric:4.7.3"
hiltTest = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
composeUiTest = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
composeUiManifestTest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
# androidx
androidxTestCore = "androidx.test:core:1.4.1-alpha03"
androidxTestRunner = "androidx.test:runner:1.4.1-alpha03"

[bundles]
common = ["javax", "coroutines"]
test = ["turbine", "coroutinesTest"]
mockito = ["mockito", "mockitoKotlin"]
#test2 = ["junitApi", "turbine", "coroutinesTest", "mockk"]
androidTest = ["turbine", "coroutinesTest"]